create or replace view DB_IAWT_DEV_DWH.SHARED_BDV.VW_SAT_CONTRACT_COMPUTE(
	HK_HUB,
	MD_START_DT,
	MD_HASH_NAT_KEYS,
	MD_SOURCE,
	MD_SRC_SYSTEM,
	MD_EXTRACT_DT,
	CONTRACT_ID,
	PLAN_MNEMONIC_CD,
	PLAN_MNEMONIC_LBL,
	OPEN_DATE,
	CLOSE_DATE,
	GROUP_TYPE_CD,
	ADMINISTRATOR_TYPE,
	MD_ACTIVE,
	PLAN_CODE,
	PLAN_LABEL,
	ACCOUNT_TYPE,
	GROUP_TYPE_CODE,
	ACCUMULATION_TYPE
) as 

/*********************** NBIN ************************/

WITH latest_rapcode_plan AS 
(
SELECT PLAN_LABEL, ACCOUNT_TYPE, GROUP_TYPE_CODE,ACCUMULATION_TYPE, ACCOUNT_RAP_CODE, RETAIL_PLAN, ASC_1_RESP_PLAN_TYPES, md_active, s.MD_START_DT 
FROM DB_IAWT_DEV_DWH.STEWARDSHIP_RDV.REF_RAPCODE_PLAN  r 
INNER JOIN DB_IAWT_DEV_DWH.STEWARDSHIP_RDV.SAT_REF_RAPCODE_PLAN_IAS s ON r.HK_HUB = s.HK_HUB 
)                           
SELECT s.HK_HUB,
s.MD_START_DT,
s.HK_HUB as MD_HASH_NAT_KEYS,
s.MD_SOURCE,
s.MD_SRC_SYSTEM,
s.MD_EXTRACT_DT,
h.CONTRACT_ID,
lp.GROUP_TYPE_CODE as PLAN_MNEMONIC_CD,
lp.PLAN_LABEL as PLAN_MNEMONIC_LBL,
--lp.ACCOUNT_TYPE as ACCOUNT_TYPE,
s.A_C_OPEN_DATE as OPEN_DATE,
s.A_C_CLOSING_DATE as  CLOSE_DATE,
lp.GROUP_TYPE_CODE as GROUP_TYPE_CD,
s.ADMINISTRATOR_TYPE,
s.MD_ACTIVE, 
--CASE WHEN s.ACCOUNT_RAP_CODE='Z' AND lp.ASC_1_RESP_Plan_Types IS NULL THEN CONCAT(IFNULL(s.ACCOUNT_RAP_CODE,''),'_',IFNULL(s.RETAIL_PLAN,''), '_', '0') WHEN s.ACCOUNT_RAP_CODE='Z' AND lp.ASC_1_RESP_Plan_Types IS NOT NULL THEN  CONCAT(IFNULL(s.ACCOUNT_RAP_CODE,''),'_',IFNULL(s.RETAIL_PLAN,''), '_', IFNULL(lp.ASC_1_RESP_Plan_Types, ''))  else CONCAT(IFNULL(s.ACCOUNT_RAP_CODE,''),'_',IFNULL(s.RETAIL_PLAN,'')) END AS ID,
CASE WHEN s.ACCOUNT_RAP_CODE='Z' AND lp.ASC_1_RESP_Plan_Types IS NULL THEN CONCAT(IFNULL(s.ACCOUNT_RAP_CODE,''),'_',IFNULL(s.RETAIL_PLAN,''), '_', '0') WHEN s.ACCOUNT_RAP_CODE='Z' AND lp.ASC_1_RESP_Plan_Types IS NOT NULL THEN  CONCAT(IFNULL(s.ACCOUNT_RAP_CODE,''),'_',IFNULL(s.RETAIL_PLAN,''), '_', IFNULL(lp.ASC_1_RESP_Plan_Types, ''))  else CONCAT(IFNULL(s.ACCOUNT_RAP_CODE,''),'_',IFNULL(s.RETAIL_PLAN,'')) END AS PLAN_CODE,
IFNULL(lp.PLAN_LABEL, 'N/A')                                                            AS PLAN_LABEL,
CASE WHEN IFNULL(lp.ACCOUNT_TYPE, 'N/A') = 'Non-Registered'
THEN 'Non registered' ELSE IFNULL(lp.ACCOUNT_TYPE, 'N/A') END                                                               AS ACCOUNT_TYPE,
IFNULL(lp.GROUP_TYPE_CODE, 'N/A')                                                       AS GROUP_TYPE_CODE,
lp.ACCUMULATION_TYPE                                                                    AS ACCUMULATION_TYPE
FROM DB_IAWT_DEV_DWH.SHARED_RDV.HUB_CONTRACT h 
INNER JOIN DB_IAWT_DEV_DWH.SHARED_RDV.SAT_CONTRACT_IAS_NBIN s 
ON s.HK_HUB = h.HK_HUB      
LEFT JOIN latest_rapcode_plan lp
ON s.RETAIL_PLAN = CASE WHEN lp.ACCOUNT_RAP_CODE = 'P' THEN lp.RETAIL_PLAN ELSE null END

UNION ALL

/*********************** IAS UNIVERIS ************************/
SELECT s.HK_HUB,
s.MD_START_DT,
s.HK_HUB as MD_HASH_NAT_KEYS,
s.MD_SOURCE,
s.MD_SRC_SYSTEM,
s.MD_EXTRACT_DT,
h.CONTRACT_ID,
IP.PLN_MNEM_ENG as PLAN_MNEMONIC_CD,
IP.PLN_DESC_ENG  as PLAN_MNEMONIC_LBL,
--CASE WHEN PLN_REG = 0 THEN 'Non Registered' ELSE 'Registered' END as ACCOUNT_TYPE,
s.SETUP_DT as OPEN_DATE,
s.CLOSE_DT as  CLOSE_DATE,
IP.STMT_GROUP_MNEM as GROUP_TYPE_CD,
s.ADMINISTRATOR_TYPE,
s.MD_ACTIVE,
--IP.PLN_MNEM_ENG                                                         AS ID,
IP.PLN_MNEM_ENG                                                         AS PLAN_CODE,
IP.PLN_DESC_ENG                                                         AS PLAN_LABEL,
CASE WHEN IP.PLN_REG=0 THEN 'Non registered' 
     ELSE 'Registered' END                                          AS ACCOUNT_TYPE,
IP.STMT_GROUP_MNEM                                            AS GROUP_TYPE_CODE,
'N/A'                                                               AS ACCUMULATION_TYPE
FROM DB_IAWT_DEV_DWH.SHARED_RDV.HUB_CONTRACT h 
INNER JOIN DB_IAWT_DEV_DWH.SHARED_RDV.SAT_CONTRACT_IAS_UNIVERIS s
ON s.HK_HUB = h.HK_HUB LEFT OUTER JOIN (
SELECT sref.* FROM DB_IAWT_DEV_DWH.SHARED_RDV.SAT_REF_INVESTMENT_SAVING_PROGRAM_TYPES_IAS_UNIVERIS sref
INNER JOIN DB_IAWT_DEV_DWH.SHARED_RDV.REF_INVESTMENT_SAVING_PROGRAM_TYPES R
ON sref.HK_HUB = R.HK_HUB QUALIFY ROW_NUMBER() OVER(PARTITION BY sref.HK_HUB ORDER BY MD_START_DT DESC) = 1 ) IP 
ON s.PLN_CD =IP.PLN_CD  

UNION ALL

/*********************** INVESTIA UNIVERIS ************************/

SELECT s.HK_HUB,
s.MD_START_DT,
s.HK_HUB as MD_HASH_NAT_KEYS,
s.MD_SOURCE,
s.MD_SRC_SYSTEM,
s.MD_EXTRACT_DT,
h.CONTRACT_ID,
IP.PLN_MNEM_ENG as PLAN_MNEMONIC_CD,
IP.PLN_DESC_ENG  as PLAN_MNEMONIC_LBL,
--CASE WHEN PLN_REG = 0 THEN 'Non Registered' ELSE 'Registered' END as ACCOUNT_TYPE,
s.SETUP_DT as OPEN_DATE,
s.CLOSE_DT as  CLOSE_DATE,
IP.STMT_GROUP_MNEM as GROUP_TYPE_CD,
s.ADMINISTRATOR_TYPE,
s.MD_ACTIVE,
--IP.PLN_MNEM_ENG                                                         AS ID,
IP.PLN_MNEM_ENG                                                         AS PLAN_CODE,
IP.PLN_DESC_ENG                                                         AS PLAN_LABEL,
CASE WHEN IP.PLN_REG=0 THEN 'Non registered' 
     ELSE 'Registered' END                                          AS ACCOUNT_TYPE,
IP.STMT_GROUP_MNEM                                            AS GROUP_TYPE_CODE,
'N/A'                                                               AS ACCUMULATION_TYPE
FROM DB_IAWT_DEV_DWH.SHARED_RDV.HUB_CONTRACT h 
INNER JOIN DB_IAWT_DEV_DWH.SHARED_RDV.SAT_CONTRACT_INVESTIA_UNIVERIS s
ON s.HK_HUB = h.HK_HUB  LEFT OUTER JOIN (
SELECT sref.* FROM DB_IAWT_DEV_DWH.SHARED_RDV.SAT_REF_INVESTMENT_SAVING_PROGRAM_TYPES_INVESTIA_UNIVERIS sref
INNER JOIN DB_IAWT_DEV_DWH.SHARED_RDV.REF_INVESTMENT_SAVING_PROGRAM_TYPES R 
ON sref.HK_HUB = R.HK_HUB QUALIFY ROW_NUMBER() OVER(PARTITION BY sref.HK_HUB ORDER BY MD_START_DT DESC) = 1 ) IP 
ON s.PLN_CD =IP.PLN_CD;
