
-- Create DIM_DATE TABLE
create or replace TABLE DB_IAW_DEV_DM."SHARED".DIM_DATE (
	ID NUMBER(38,0) COMMENT 'Surrogate key of the dimension',
	DATE DATE NOT NULL,
	FULL_DATE_DESC VARCHAR(64) NOT NULL,
	DAY_NUM_IN_WEEK NUMBER(1,0) NOT NULL,
	DAY_NUM_IN_MONTH NUMBER(2,0) NOT NULL,
	DAY_NUM_IN_YEAR NUMBER(3,0) NOT NULL,
	DAY_NAME VARCHAR(10) NOT NULL,
	DAY_ABBREV VARCHAR(3) NOT NULL,
	WEEKDAY_IND VARCHAR(64) NOT NULL,
	US_HOLIDAY_IND VARCHAR(64),
	_HOLIDAY_IND VARCHAR(64),
	MONTH_END_IND VARCHAR(64) NOT NULL,
	WEEK_BEGIN_DATE_NKEY NUMBER(9,0) NOT NULL,
	WEEK_BEGIN_DATE DATE NOT NULL,
	WEEK_END_DATE_NKEY NUMBER(9,0) NOT NULL,
	WEEK_END_DATE DATE NOT NULL,
	WEEK_NUM_IN_YEAR NUMBER(9,0) NOT NULL,
	MONTH_NAME VARCHAR(10) NOT NULL,
	MONTH_ABBREV VARCHAR(3) NOT NULL,
	MONTH_NUM_IN_YEAR NUMBER(2,0) NOT NULL,
	YEARMONTH VARCHAR(10) NOT NULL,
	QUARTER NUMBER(1,0) NOT NULL,
	YEARQUARTER VARCHAR(10) NOT NULL,
	YEAR NUMBER(5,0) NOT NULL,
	FISCAL_WEEK_NUM NUMBER(2,0) NOT NULL,
	FISCAL_MONTH_NUM NUMBER(2,0) NOT NULL,
	FISCAL_YEARMONTH VARCHAR(10) NOT NULL,
	FISCAL_QUARTER NUMBER(1,0) NOT NULL,
	FISCAL_YEARQUARTER VARCHAR(10) NOT NULL,
	FISCAL_HALFYEAR NUMBER(1,0) NOT NULL,
	FISCAL_YEAR NUMBER(5,0) NOT NULL,
	SQL_TIMESTAMP TIMESTAMP_NTZ(9),
	CURRENT_ROW_IND VARCHAR(1) DEFAULT 'Y',
	EFFECTIVE_DATE DATE DEFAULT CAST(CURRENT_TIMESTAMP() AS DATE),
	EXPIRATION_DATE DATE DEFAULT CAST('9999-12-31' AS DATE),
	MONTH_NAME_YEAR VARCHAR(100),
	MONTH_NAME_YEAR_ORD NUMBER(38,0)
)COMMENT='Type 0 Dimension Table Housing Calendar and Fiscal Year Date Attributes';  

-- Create REF_DATE TABLE
create or replace TABLE DB_IAW_DEV_DWH.STEWARDSHIP_RDV.REF_DATE (
	DATE DATE NOT NULL,
	FULL_DATE_DESC VARCHAR(64) NOT NULL,
	DAY_NUM_IN_WEEK NUMBER(1,0) NOT NULL,
	DAY_NUM_IN_MONTH NUMBER(2,0) NOT NULL,
	DAY_NUM_IN_YEAR NUMBER(3,0) NOT NULL,
	DAY_NAME VARCHAR(10) NOT NULL,
	DAY_ABBREV VARCHAR(3) NOT NULL,
	WEEKDAY_IND VARCHAR(64) NOT NULL,
	US_HOLIDAY_IND VARCHAR(64),
	_HOLIDAY_IND VARCHAR(64),
	MONTH_END_IND VARCHAR(64) NOT NULL,
	WEEK_BEGIN_DATE_NKEY NUMBER(9,0) NOT NULL,
	WEEK_BEGIN_DATE DATE NOT NULL,
	WEEK_END_DATE_NKEY NUMBER(9,0) NOT NULL,
	WEEK_END_DATE DATE NOT NULL,
	WEEK_NUM_IN_YEAR NUMBER(9,0) NOT NULL,
	MONTH_NAME VARCHAR(10) NOT NULL,
	MONTH_ABBREV VARCHAR(3) NOT NULL,
	MONTH_NUM_IN_YEAR NUMBER(2,0) NOT NULL,
	YEARMONTH VARCHAR(10) NOT NULL,
	QUARTER NUMBER(1,0) NOT NULL,
	YEARQUARTER VARCHAR(10) NOT NULL,
	YEAR NUMBER(5,0) NOT NULL,
	FISCAL_WEEK_NUM NUMBER(2,0) NOT NULL,
	FISCAL_MONTH_NUM NUMBER(2,0) NOT NULL,
	FISCAL_YEARMONTH VARCHAR(10) NOT NULL,
	FISCAL_QUARTER NUMBER(1,0) NOT NULL,
	FISCAL_YEARQUARTER VARCHAR(10) NOT NULL,
	FISCAL_HALFYEAR NUMBER(1,0) NOT NULL,
	FISCAL_YEAR NUMBER(5,0) NOT NULL,
	SQL_TIMESTAMP TIMESTAMP_NTZ(9),
	CURRENT_ROW_IND VARCHAR(1) DEFAULT 'Y',
	EFFECTIVE_DATE DATE DEFAULT CAST(CURRENT_TIMESTAMP() AS DATE),
	EXPIRATION_DATE DATE DEFAULT CAST('9999-12-31' AS DATE),
	MONTH_NAME_YEAR VARCHAR(100),
	MONTH_NAME_YEAR_ORD NUMBER(38,0)
)COMMENT='Type 0 Dimension Table Housing Calendar and Fiscal Year Date Attributes';

  

-- Load DIM_DATE
INSERT INTO DB_IAW_DEV_DM."SHARED".DIM_DATE
WITH CTE_MY_DATE AS (
     SELECT t2.No, dateadd(DAY,t2.No,t1.MY_DATE) as MY_DATE
     FROM (SELECT '2000-01-01' AS MY_DATE) t1
	CROSS JOIN (SELECT seq4() AS No FROM table(generator(rowcount => 100000))) t2
	WHERE dateadd(DAY,t2.No,t1.MY_DATE) <= '2040-12-31'
)
SELECT 
	 CONCAT(YEAR(MY_DATE)::VARCHAR, lpad(MONTH(MY_DATE)::VARCHAR, 2, '0'),lpad(DAY(MY_DATE)::VARCHAR, 2, '0'))::INT ID
	,MY_DATE AS "DATE"
	,CONCAT (DECODE(extract ('dayofweek_iso',MY_DATE),  1, 'Monday',  2, 'Tuesday',  3, 'Wednesday',  4, 'Thursday',  5, 'Friday',  6, 'Saturday',  7, 'Sunday') 
		  , TO_VARCHAR(MY_DATE, ', mon dd, yyyy')) as FULL_DATE_DESC
	,DAYOFWEEK(MY_DATE) + 1  DAY_NUM_IN_WEEK      
	,DAY(MY_DATE) AS DAY_NUM_IN_MONTH
	,DAYOFYEAR(MY_DATE) AS DAY_NUM_IN_YEAR
	,DECODE(extract ('dayofweek_iso',MY_DATE),  1, 'Monday',  2, 'Tuesday',  3, 'Wednesday',  4, 'Thursday',  5, 'Friday',  6, 'Saturday',  7, 'Sunday')  AS DAY_NAME
	,DAYNAME(MY_DATE) AS DAY_ABBREV
	,'Weekday' AS WEEKDAY_IND
	,'' AS US_HOLIDAY_IND
	,'' AS "_HOLIDAY_IND"
	, CASE WHEN last_day(MY_DATE) <> MY_DATE THEN 'Not-Month-end' ELSE 'Month-end' END AS  MONTH_END_IND
	, TO_VARCHAR(DATE_TRUNC(WEEK, MY_DATE), 'yyyymmdd') WEEK_BEGIN_DATE_NKEY
	, DATE_TRUNC(WEEK, MY_DATE) AS WEEK_BEGIN_DATE
	, TO_VARCHAR(DATEADD(DAY, 6, DATE_TRUNC(WEEK, MY_DATE)), 'yyyymmdd') WEEK_END_DATE_NKEY
	, DATEADD(DAY, 6, DATE_TRUNC(WEEK, MY_DATE)) AS WEEK_END_DATE
	, WEEKOFYEAR(MY_DATE) AS WEEK_NUM_IN_YEAR
	, TO_VARCHAR(MY_DATE,'MMMM ') MONTH_NAME
	, MONTHNAME(MY_DATE) AS MONTH_ABBREV
	, MONTH(MY_DATE) AS MONTH_NUM_IN_YEAR
	, CONCAT( YEAR(MY_DATE), '-',TO_VARCHAR(MY_DATE, 'MM')) YEARMONTH
	, QUARTER (MY_DATE) AS "QUARTER"
	, CONCAT( YEAR(MY_DATE), '-0',QUARTER (MY_DATE))  YEARQUARTER
	, YEAR(MY_DATE) AS "YEAR"
	, WEEK(MY_DATE) AS FISCAL_WEEK_NUM
	, MONTH_NUM_IN_YEAR AS FISCAL_MONTH_NUM
	, YEARMONTH AS FISCAL_YEARMONTH
	, "QUARTER" AS FISCAL_QUARTER
	, YEARQUARTER AS FISCAL_YEARQUARTER
	, CASE WHEN "QUARTER" IN (1,2) THEN 1 ELSE 2 END AS FISCAL_HALFYEAR
	, "YEAR" AS FISCAL_YEAR
	, MY_DATE SQL_TIMESTAMP
	,'Y' CURRENT_ROW_IND
	, CURRENT_DATE() EFFECTIVE_DATE
	, '9999-12-31' EXPIRATION_DATE
	, CONCAT(TO_VARCHAR(MY_DATE,'MMMM '),YEAR(MY_DATE)) AS MONTH_NAME_YEAR
	, CONCAT( YEAR(MY_DATE),TO_VARCHAR(MY_DATE, 'MM')) AS MONTH_NAME_YEAR_ORD   
FROM CTE_MY_DATE 
ORDER BY MY_DATE;
   
  
-- Load Ref_date 
INSERT INTO DB_IAW_DEV_DWH.STEWARDSHIP_RDV.REF_DATE
WITH CTE_MY_DATE AS (
     SELECT t2.No, dateadd(DAY,t2.No,t1.MY_DATE) as MY_DATE
     FROM (SELECT '2000-01-01' AS MY_DATE) t1
	CROSS JOIN (SELECT seq4() AS No FROM table(generator(rowcount => 100000))) t2
	WHERE dateadd(DAY,t2.No,t1.MY_DATE) <= '2040-12-31'
)
SELECT 
	 MY_DATE AS "DATE"
	,CONCAT (DECODE(extract ('dayofweek_iso',MY_DATE),  1, 'Monday',  2, 'Tuesday',  3, 'Wednesday',  4, 'Thursday',  5, 'Friday',  6, 'Saturday',  7, 'Sunday') 
		  , TO_VARCHAR(MY_DATE, ', mon dd, yyyy')) as FULL_DATE_DESC
	,DAYOFWEEK(MY_DATE) + 1  DAY_NUM_IN_WEEK      
	,DAY(MY_DATE) AS DAY_NUM_IN_MONTH
	,DAYOFYEAR(MY_DATE) AS DAY_NUM_IN_YEAR
	,DECODE(extract ('dayofweek_iso',MY_DATE),  1, 'Monday',  2, 'Tuesday',  3, 'Wednesday',  4, 'Thursday',  5, 'Friday',  6, 'Saturday',  7, 'Sunday')  AS DAY_NAME
	,DAYNAME(MY_DATE) AS DAY_ABBREV
	,'Weekday' AS WEEKDAY_IND
	,'' AS US_HOLIDAY_IND
	,'' AS "_HOLIDAY_IND"
	, CASE WHEN last_day(MY_DATE) <> MY_DATE THEN 'Not-Month-end' ELSE 'Month-end' END AS  MONTH_END_IND
	, TO_VARCHAR(DATE_TRUNC(WEEK, MY_DATE), 'yyyymmdd') WEEK_BEGIN_DATE_NKEY
	, DATE_TRUNC(WEEK, MY_DATE) AS WEEK_BEGIN_DATE
	, TO_VARCHAR(DATEADD(DAY, 6, DATE_TRUNC(WEEK, MY_DATE)), 'yyyymmdd') WEEK_END_DATE_NKEY
	, DATEADD(DAY, 6, DATE_TRUNC(WEEK, MY_DATE)) AS WEEK_END_DATE
	, WEEKOFYEAR(MY_DATE) AS WEEK_NUM_IN_YEAR
	, TO_VARCHAR(MY_DATE,'MMMM ') MONTH_NAME
	, MONTHNAME(MY_DATE) AS MONTH_ABBREV
	, MONTH(MY_DATE) AS MONTH_NUM_IN_YEAR
	, CONCAT( YEAR(MY_DATE), '-',TO_VARCHAR(MY_DATE, 'MM')) YEARMONTH
	, QUARTER (MY_DATE) AS "QUARTER"
	, CONCAT( YEAR(MY_DATE), '-0',QUARTER (MY_DATE))  YEARQUARTER
	, YEAR(MY_DATE) AS "YEAR"
	, WEEK(MY_DATE) AS FISCAL_WEEK_NUM
	, MONTH_NUM_IN_YEAR AS FISCAL_MONTH_NUM
	, YEARMONTH AS FISCAL_YEARMONTH
	, "QUARTER" AS FISCAL_QUARTER
	, YEARQUARTER AS FISCAL_YEARQUARTER
	, CASE WHEN "QUARTER" IN (1,2) THEN 1 ELSE 2 END AS FISCAL_HALFYEAR
	, "YEAR" AS FISCAL_YEAR
	, MY_DATE SQL_TIMESTAMP
	,'Y' CURRENT_ROW_IND
	, CURRENT_DATE() EFFECTIVE_DATE
	, '9999-12-31' EXPIRATION_DATE
	, CONCAT(TO_VARCHAR(MY_DATE,'MMMM '),YEAR(MY_DATE)) AS MONTH_NAME_YEAR
	, CONCAT( YEAR(MY_DATE),TO_VARCHAR(MY_DATE, 'MM')) AS MONTH_NAME_YEAR_ORD   
FROM CTE_MY_DATE 
ORDER BY MY_DATE;